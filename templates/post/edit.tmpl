<link rel="stylesheet" href="/css/writing.css">
<form method="post" name="new" onsubmit="copy()">
    <h1><input id="title" autocomplete="off" name="title" value="{{.Title}}"></h1>
    <textarea name="content" style="display: none"></textarea>
    <div id="text" contenteditable="true">{{.Content}}</div>
</form>
<script type="text/javascript">

	// These functions are analogous to the ones in /post/new.tmpl
	// If this is your first time reading this code, I suggest to look at the
	// file mentioned above first. It should be a bit more clear.
	
	// LocalStorage loops(?) to save both post title and content to cache.
	// Looks ugly, but better than AJAX based failover, right?
	// Modified version of this: https://gist.github.com/addyosmani/d1f3ca715ac902788c2d
	with({
		l: localStorage, // Alias for localStorage, where we'll store text content
	// This is some sort of variable initialization. It also checks whether there is anything in cache already.
	}) with(document.getElementById("text")) if (l[{{.Slug}}] != null) {
		innerHTML = l.getItem({{.Slug}}), // Replace placeholder text with localstorage content.
		oninput = function () {
			l[{{.Slug}}] = innerHTML // Save HTML context to localStorage.
		}
	} else {
		oninput = function () {
			l[{{.Slug}}] = innerHTML
		}
	}

	// For a yet another unknown reason we need two instances of localstorage.
	// Fundamentally analogous to the loop above.
	with({
		l2: localStorage,
	}) with(document.getElementById("title")) if (l2[{{.Title}}] != null) {
		document.new.title.value = l2.getItem({{.Title}}),
		oninput = function () {
			l2[{{.Title}}] = document.new.title.value
		}
	} else {
		oninput = function () {
			l2[{{.Title}}] = document.new.title.value
		}
	}

	// Copy data from contenteditable to textarea for POST to gather the data correctly.
	// Also clear localstorage.
	function copy() {
		localStorage.removeItem({{.Slug}});
		localStorage.removeItem({{.Title}});
		var html = document.getElementById("text").innerHTML;
		document.new.content.value = html;
		return
	}
</script>